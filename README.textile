h1. Clever Algorithms 

h2. Overview

The Clever Algorithms Project is an effort to describe a large number of algorithmic techniques from the the fields of Biologically Inspired Computation and Computational Intelligence in a complete, consistent, and centralized manner such that they are accessible, usable, and understandable. 

The Clever Algorithms Project is currently hosted online at "http://www.CleverAlgorithms.com":http://www.CleverAlgorithms.com 

h2. Outcomes

A listing of outcomes from the project.

h3. Book Manuscripts

* Milestone 1: Draft book structure including title, parts, chapters, sections, and subsections. (_in progress_)
* Milestone 2: Draft introduction chapter and preface. (_next_)
* Milestone 3: Draft ten algorithm descriptions. (_future_) 

h3. Technical Reports

* Jason Brownlee. "The clever algorithms project: Overview":http://github.com/jbrownlee/CleverAlgorithms/raw/master/workspace/release/techreport-20100105-1.pdf. Technical Report CA-TR-20100105-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.

h2. Breakdown

This project is partitioned into five efforts:

* *workspace/* A workspace for content development such as notes and technical reports that facilitates exploration and investigation independent of the book content. Content developed in the workspace may provide the basis for the book or may be directly migrated into the book. Notes are in plain text, technical reports are prepared using the LaTex type setting system and organized into sub-directories. 
* *book/* The content and structure for the publishable book. The book is prepared using the LaTex type setting system.
* *web/* A webpage used to promote the project with a specialized content management system tailored to the content of the book.
* *src/* Complete source code for the examples provided in the book. Examples are provided in the Ruby programming language.
* *deprecated/*: A collection of the work product produced during the previous attempts at completing the clever algorithms project (previously called the algorithm atlas and inspired algorithms).

h2. How to Contribute

Found a bug in the sample code or a typo in the content? Want to suggest an algorithm to include? Want to contribute a description of an algorithm or background content for the book?

You may want to:
* Email the author: "jason.brownlee05@gmail.com":mailto:jason.brownlee05@gmail.com
* or, Message the author though the github website: (signup and login to github, go to "http://github.com/jbrownlee":http://github.com/jbrownlee and click "Message")
* or, Fork the CleverAlgorithms project on github, make changes, and request a pull into the main project (again, you must signup and login to github and follow the github documentation for forking, contributing, and making a pull request).

h2. History

A summary of how the project has developed over its lifetime.

* January 2010: An assessment of the project to-date (previous 2 years) and the development of a plan to ensure the continued capture of ad hoc effort contributions. Project renamed to "CleverAlgorithms.com":http://www.cleveralgorithms.com and moved into a public repository under a distributed version control system. The renewed project facilitates contributions under a facade that includes content development, book preparation, source code, and webpage. A methodology of discrete formal knowledge capture was promoted for content development in the form of small, formal, and independent technical reports (2-4 man days) on topics and algorithms that may be related to the book or incorporated into the book structure.
* August 2009: The development of a some-what systematic methodology for selecting the algorithms to include in the book. A study was performed and presented entitled: "What is a good optimization algorithm? A data-driven method for algorithm selection":http://www.neverreadpassively.com/2009/08/what-is-good-optimization-algorithm.html that proposed the top 10 most popular algorithms in the fields of evolutionary computation, swarm intelligence, probabilistic algorithms, stochastic algorithms, and overall.
* July 2009: A return to the book format, and a consolidation of all previous effort into a single book structure. The mixture of styles of the formal algorithm presentation and tutorials provided a confusing organization. A second attempt as made in the same month, stripping all content and starting the project again with a blank book structure. 
* January-February 2009: A focus on the tutorial presentation of algorithms. A blog was created called "InspiredAlgorithms.com":http://www.inspiredalgorithms.com with the tag line "This project aims to be the largest set of explained and executable computational intelligence algorithms on the planet". A series of eight blog posts were created, that included the presentation of seven stochastic search algorithms in tutorial form. Sample source code was presented in the Ruby programming language. The blog was supported by a google code project for the standalone source code, and a google group to facilitate discussions about the presented algorithms. It was believed that the tutorial format would be more accessible and that the blog and supporting sites would provide the basis for building a community and ultimately revenue stream. 
* December 2008-January 2009: An updated perspective on the project toward a more practical presentation of the material with code examples in a tutorial format. A cookbook-like approach to algorithm presentation with both a standardized technical description and programatic implementation in the Ruby programming language that follows best practices. The formal presentation structure for algorithm presentation was updated to: inspiration, strategy, heuristics, further reading, and tutorial. A long list of potential algorithms was defined, and an aggressive schedule was described where 2-3 algorithm descriptions were to be produced per week with a an expected July project completion. A more elaborate book-like LaTex organization was prepared with explicit support for Ruby code examples. 
* December 2008: A jump in the project focus to code examples and practical tutorials. A series of 10 evolutionary algorithms were implemented in the Ruby programming language with basic algorithm overviews (inspiration, strategy, procedure, heuristic, tutorial) separate source code, and source code tutorials. This code focus provided a departure from the book structure and focus on formal algorithm presentation toward practical implementation-centric (recipes or cookbook style) presentation.
* January 2008: Initial conceptualization of the project as an atlas of artificial intelligence algorithms, specifically computational intelligence algorithms presented in a consistent and structured manner. This initial effort proposed a one-page summary of each algorithm presented with the formal structure: metaphor, strategy, operations, heuristics, and more information. Algorithms were to be drawn from the fields: ant colony optimization, artificial immune systems, evolutionary computation, and swarm intelligence. Pseudo code for each algorithm was to be presented separately in an appendix.

h2. License 

Copyright (C) 2008-2010 Jason Brownlee

<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/au/">
	<img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/2.5/au/88x31.png" />
</a>

This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/2.5/au/">Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License</a>.