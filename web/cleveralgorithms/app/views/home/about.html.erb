<% title("About") %>
<a name="about"></a>
<div class="subtitle">About</div>
<p>Want to know a little more about all this?</p>

<div class="algorithm_subheading">Contents</div>
<div class="algorithm_menu">
	<ul>
		<li><%= link_to "Project", '#project' %></li>
		<li><%= link_to "Algorithm Descriptions", '#template' %></li>
		<li><%= link_to "Author", '#author' %></li>
		<li><%= link_to "Contributions", '#contribute' %></li>
		<li><%= link_to "Acknowledgements", '#acknowledgements' %></li>
	</ul>
</div>

<a name="project"></a>
<div class="subsubtitle">The Clever Algorithms Project</div>
<div class="text">
	<p>
	An open problem in the field of Artificial Intelligence is that algorithm 
	descriptions are commonly incomplete, inconsistent, and distributed resulting 
	in variable interpretations of algorithms, undue attrition of algorithms, 
	and ultimately bad science. 	
	</p>
	<p>
	The Clever Algorithms project is an effort to describe a large number 
	of algorithmic techniques from the the fields of Metaheuristics, Biologically Inspired 
	Computation, and Computational Intelligence in a complete, consistent, 
	and centralized manner such that they are accessible, usable, and 
	understandable. 
	</p>
	<p>
	The audience for this algorithm descriptions produced by the project include 
	research scientists, engineers, students, and interested amateurs.
	</p>
	<p>
	The outcomes for this project are i) a website that provides all content for free (licensed under a <%= link_to "Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License", "http://creativecommons.org/licenses/by-nc-sa/2.5/au/" %>.)
	and 2) a compendium of algorithm descriptions released as a dead-tree book: 
	<ul>
		<li>Jason Brownlee. "<%= link_to book_title, book_url %>", LuLu, 2010 (expected)</li>
	</ul>
	</p>
	<p>
	An incremental content development methodology was used to complete the project
	that involved the completion of discrete standalone algorithm descriptions over an extended 
	period of time. This approach allowed, and continues to allow ongoing review, revision, and refinement of both 
	the content and the algorithm description template.
	The content for the project was developed as a series of technical reports 
	in a public github project
	available from: <%= link_to development_url, development_url %> 
	</p>	
	<p>
	For more background on the Clever Algorithms project, please see: 
	<ul>
		<li>Jason Brownlee. <%= link_to "The Clever Algorithms Project: Overview","http://github.com/jbrownlee/CleverAlgorithms/raw/master/workspace/release/techreport-20100105-1.pdf" %>. Technical Report CA-TR-20100105-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.</li>
		<li>Jason Brownlee. <%= link_to "The Clever Algorithms Project: Inspiring Works", "http://github.com/jbrownlee/CleverAlgorithms/raw/master/workspace/release/techreport-20100109-1.pdf" %>. Technical Report CA-TR-20100109-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.</li>
	</ul>
	</p>
</div>

<a name="template"></a>
<div class="subsubtitle">Standardized Algorithm Descriptions</div>
<div class="text">
	<p>
	A technique is more than just a procedure or code listing. Each approach is an island of research and the meta-information that define the context of a technique are just as important to understanding and application as abstract recipes and concrete implementations. A standardized algorithm description template must be a suitable mixture of softer narrative descriptions, programmatic descriptions both abstract and concrete, and most importantly useful sources for finding out more information about the technique. 	
	</p>
	<p>
		Each algorithm description that conforms to this template is not intended to be complete. Rather, it is intended to provide a useful overview of an approach across a set of carefully selected axises, and is intended to be used as a jumpstart into understanding the technique.
	</p>
	<ul>
		<li><strong>Name</strong>: The algorithm name defines the canonical name used to refer to the technique, in addition to common aliases, abbreviations, and acronyms. The name is used in terms of the heading and sub-headings of an algorithm description.</li>
		<li><strong>Taxonomy</strong>: The algorithm taxonomy defines where a techniques fits into the field, both the specific subfields of Computational Intelligence and Biologically Inspired Computation as well as the broader field of Artificial Intelligence. The taxonomy also provides a context for determining the relationships between algorithms.</li>
		<li><strong>Inspiration</strong>: (*optional) The inspiration describes the specific system or process that provoked the inception of the algorithm. The inspiring system may non-exclusively be natural, biological, physical, or social. The description of the inspiring system may include relevant domain specific theory, observation, nomenclature, and most important must include those salient attributes of the system that are somehow abstractly or conceptually manifest in the technique. </li>
		<li><strong>Metaphor</strong>: (*optional) The metaphor is a description of the technique in the context of the inspiring system or a different suitable system. The features of the technique are made apparent through an analogous description of the features of the inspiring system. The explanation through analogy is not expected to be literal scientific truth, rather the method is used as an allegorical communication tool. The inspiring system is not explicitly described, this is the role of the <em>inspiration</em> element, which represents a loose dependency for this element. </li>
		<li><strong>Strategy</strong>: The strategy is an abstract description of the computational model. The strategy describes the information processing actions a technique shall take in order to achieve an objective. The strategy provides a logical separation between a computational realization (procedure) and a analogous system (metaphor). A given problem solving strategy may be realized as one of a number specific algorithms or problem solving systems.</li>
		<li><strong>Procedure</strong>: (*optional) The algorithmic procedure summarizes the specifics of realizing a strategy as a systemized and parameterized computation. It outlines how the algorithm is organized in terms of the data structures and representations. The procedure may be described in terms of software engineering and computer science artifacts such as pseudo code, design diagrams, and relevant mathematical equations.</li>
		<li><strong>Heuristics</strong>: The heuristics element describe the commonsense, best practice, and demonstrated rules for applying and configuring a parameterized algorithm. The heuristics relate to the technical details of the techniques procedure and data structures for general classes of application (neither specific implementations not specific problem instances). The heuristics are described textually, such as a series of guidelines in a bullet-point structure.</li>
		<li>
		<strong>Code Listing</strong>: The code description provides a minimal but functional version of the technique implemented with a programming language. The code description must be able to be typed into an appropriate computer, compiled or interpreted as need be, and provide a working execution of the technique. The technique implementation also includes a minimal problem instance to which it is applied, and both the problem and algorithm implementations are complete enough to demonstrate the techniques procedure. The description is presented as a programming source code listing.
		<br />
		The Ruby Programming language was selected for code examples in the Clever Algorithms Project. For more background information on language selection for the Clever Algorithms Project, please see: 
		<ul>
			<li>Jason Brownlee. <%= link_to "Programming Language Selection for Optimization Algorithms", "http://github.com/jbrownlee/CleverAlgorithms/raw/master/workspace/release/techreport-20100122-1.pdf" %>. Technical Report CA-TR-20100122-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.</li>
		</ul>
		</li>
		<li><strong>References</strong>: The references element description includes a listing of both primary sources of information about the technique as well as useful introductory sources for novices to gain a deeper understanding of the theory and application of the technique. The description consists of hand-selected reference material including books, peer reviewed conference papers, journal articles, and potentially websites. </li>
		<li><strong>Around the Web</strong>: A minimal but useful set of pointers to websites that provide further sources of information of the algorithm.</li>
		<li><strong>Bibliography</strong>: The complete bibliography for the citations made throughout the algorithm description.</li>
	</ul>
	
	<p>
	For more background on the development of the standardized algorithm template used in the Clever Algorithms project, please see: 
	<ul>
		<li>Jason Brownlee. <%= link_to "A Template for Standardized Algorithm Descriptions", "http://github.com/jbrownlee/CleverAlgorithms/raw/master/workspace/release/techreport-20100107-1.pdf" %>. Technical Report CA-TR-20100107-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.</li>
	</ul>
	</p>
</div>

<a name="author"></a>
<div class="subsubtitle">The Author</div>
<div class="text">
	<p>
	Jason Brownlee has a Bachelors degree in Applied Science, a Masters in 
	Information Technology and a PhD in Computer Science from Swinburne 
	University of Technology in Melbourne, Australia. The subject of Jason's 
	Masters research was Niching Genetic Algorithms. Jason's PhD work was in 
	the area of Artificial Immune Systems and involved research into extending 
	the state of Clonal Selection inspired machine learning algorithms and 
	devising new techniques inspired by the structure and function of the 
	acquired immune system.
	</p>
	<p>
	Jason has earned a living as a Consultant on numerous enterprise, R&amp;D, and
	research information technology projects in defense, retail, energy, 
	meteorology, geospatial, and information services sectors. 
	You may see a summary of Jason's academic, research, and work history on his
	<%= link_to "LinkedIn profile", "http://www.linkedin.com/in/jasonbrownlee" %>.
	</p>
	
	<p>
	Jason has a long standing passion for both practical software engineering 
	and basic research into machine learning and has developed and released many reports, 
	software plug-ins, and software tools. Jason also enjoys writing and maintains a 
	blog entitled <%= link_to "Never Read Passively", "http://www.neverreadpassively.com" %> 
	and can be followed on twitter via <%= link_to "@jbrownlee", "http://twitter.com/jbrownlee" %>.
	</p>
</div>

<a name="contribute"></a>
<div class="subsubtitle">Contributions</div>
<div class="text">
	<p>
	Found a typo in the content or a bug in the source code? 		
	Are you an expert in a technique and know some facts that could improve an algorithm description for all?
	Do you want to get that warm feeling from contributing to an open source project? 
	</p>
	<p>
	Two pillars of this effort are i) that the best domain experts are people outside of the project, 
	and ii) that this work is (somewhat) wrong by default. 
	<strong>Please help to make this project less wrong!</strong>.
	Email the author: <%= mail_to jason_email, book_author %> 
	or click the "Make Suggestion" links provided in each algorithm description.
	</p>
</div>

<a name="acknowledgements"></a>
<div class="subsubtitle">Acknowledgements</div>
<div class="text">
	<p>
	Contributions warmly received from: <em>Your name here!</em>.	
	</p>
	<p>
	A special thank you to: Daniel Angus and Ying Liu.
	</p>
</div>
